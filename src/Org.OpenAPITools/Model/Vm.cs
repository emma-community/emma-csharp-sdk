/*
 * Public EMMA API
 *
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Vm
    /// </summary>
    [DataContract(Name = "Vm")]
    public partial class Vm : IValidatableObject
    {
        /// <summary>
        /// Status of the virtual machine
        /// </summary>
        /// <value>Status of the virtual machine</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum POWEREDON for value: POWERED_ON
            /// </summary>
            [EnumMember(Value = "POWERED_ON")]
            POWEREDON = 1,

            /// <summary>
            /// Enum POWEREDOFF for value: POWERED_OFF
            /// </summary>
            [EnumMember(Value = "POWERED_OFF")]
            POWEREDOFF = 2,

            /// <summary>
            /// Enum BUSY for value: BUSY
            /// </summary>
            [EnumMember(Value = "BUSY")]
            BUSY = 3,

            /// <summary>
            /// Enum DRAFT for value: DRAFT
            /// </summary>
            [EnumMember(Value = "DRAFT")]
            DRAFT = 4
        }


        /// <summary>
        /// Status of the virtual machine
        /// </summary>
        /// <value>Status of the virtual machine</value>
        /// <example>POWERED_ON</example>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Type of virtual Central Processing Units (vCPUs)
        /// </summary>
        /// <value>Type of virtual Central Processing Units (vCPUs)</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VCpuTypeEnum
        {
            /// <summary>
            /// Enum Shared for value: shared
            /// </summary>
            [EnumMember(Value = "shared")]
            Shared = 1,

            /// <summary>
            /// Enum Standard for value: standard
            /// </summary>
            [EnumMember(Value = "standard")]
            Standard = 2,

            /// <summary>
            /// Enum Hpc for value: hpc
            /// </summary>
            [EnumMember(Value = "hpc")]
            Hpc = 3
        }


        /// <summary>
        /// Type of virtual Central Processing Units (vCPUs)
        /// </summary>
        /// <value>Type of virtual Central Processing Units (vCPUs)</value>
        /// <example>shared</example>
        [DataMember(Name = "vCpuType", EmitDefaultValue = false)]
        public VCpuTypeEnum? VCpuType { get; set; }
        /// <summary>
        /// Cloud network type
        /// </summary>
        /// <value>Cloud network type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CloudNetworkTypeEnum
        {
            /// <summary>
            /// Enum Isolated for value: isolated
            /// </summary>
            [EnumMember(Value = "isolated")]
            Isolated = 1,

            /// <summary>
            /// Enum MultiCloud for value: multi-cloud
            /// </summary>
            [EnumMember(Value = "multi-cloud")]
            MultiCloud = 2,

            /// <summary>
            /// Enum Default for value: default
            /// </summary>
            [EnumMember(Value = "default")]
            Default = 3
        }


        /// <summary>
        /// Cloud network type
        /// </summary>
        /// <value>Cloud network type</value>
        /// <example>multi-cloud</example>
        [DataMember(Name = "cloudNetworkType", EmitDefaultValue = false)]
        public CloudNetworkTypeEnum? CloudNetworkType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Vm" /> class.
        /// </summary>
        /// <param name="id">ID of the virtual machine.</param>
        /// <param name="createdAt">Date and time when the virtual machine was created.</param>
        /// <param name="createdByName">Name of the user who created the virtual machine.</param>
        /// <param name="createdById">ID of the user who created the virtual machine.</param>
        /// <param name="modifiedAt">Date and time when the virtual machine was last edited.</param>
        /// <param name="modifiedByName">Name of the user who last edited the virtual machine.</param>
        /// <param name="modifiedById">ID of the user who last edited the virtual machine.</param>
        /// <param name="name">Name of the virtual machine.</param>
        /// <param name="projectId">Project ID.</param>
        /// <param name="status">Status of the virtual machine.</param>
        /// <param name="provider">provider.</param>
        /// <param name="location">location.</param>
        /// <param name="dataCenter">dataCenter.</param>
        /// <param name="os">os.</param>
        /// <param name="vCpu">Number of virtual Central Processing Units (vCPUs).</param>
        /// <param name="vCpuType">Type of virtual Central Processing Units (vCPUs).</param>
        /// <param name="cloudNetworkType">Cloud network type.</param>
        /// <param name="ramGb">Capacity of the RAM in gigabytes.</param>
        /// <param name="disks">List of volumes.</param>
        /// <param name="networks">networks.</param>
        /// <param name="securityGroup">securityGroup.</param>
        /// <param name="subnetwork">subnetwork.</param>
        /// <param name="sshKeyId">SSH key ID.</param>
        /// <param name="userName">User name.</param>
        /// <param name="cost">cost.</param>
        /// <param name="tags">tags.</param>
        public Vm(int id = default(int), string createdAt = default(string), string createdByName = default(string), int createdById = default(int), string modifiedAt = default(string), string modifiedByName = default(string), int modifiedById = default(int), string name = default(string), int projectId = default(int), StatusEnum? status = default(StatusEnum?), VmProvider provider = default(VmProvider), VmLocation location = default(VmLocation), VmDataCenter dataCenter = default(VmDataCenter), VmOs os = default(VmOs), int vCpu = default(int), VCpuTypeEnum? vCpuType = default(VCpuTypeEnum?), CloudNetworkTypeEnum? cloudNetworkType = default(CloudNetworkTypeEnum?), int ramGb = default(int), List<KubernetesNodeGroupsInnerNodesInnerDisksInner> disks = default(List<KubernetesNodeGroupsInnerNodesInnerDisksInner>), List<KubernetesNodeGroupsInnerNodesInnerNetworksInner> networks = default(List<KubernetesNodeGroupsInnerNodesInnerNetworksInner>), VmSecurityGroup securityGroup = default(VmSecurityGroup), VmSubnetwork subnetwork = default(VmSubnetwork), int sshKeyId = default(int), string userName = default(string), VmCost cost = default(VmCost), List<Tag> tags = default(List<Tag>))
        {
            this.Id = id;
            this.CreatedAt = createdAt;
            this.CreatedByName = createdByName;
            this.CreatedById = createdById;
            this.ModifiedAt = modifiedAt;
            this.ModifiedByName = modifiedByName;
            this.ModifiedById = modifiedById;
            this.Name = name;
            this.ProjectId = projectId;
            this.Status = status;
            this.Provider = provider;
            this.Location = location;
            this.DataCenter = dataCenter;
            this.Os = os;
            this.VCpu = vCpu;
            this.VCpuType = vCpuType;
            this.CloudNetworkType = cloudNetworkType;
            this.RamGb = ramGb;
            this.Disks = disks;
            this.Networks = networks;
            this.SecurityGroup = securityGroup;
            this.Subnetwork = subnetwork;
            this.SshKeyId = sshKeyId;
            this.UserName = userName;
            this.Cost = cost;
            this.Tags = tags;
        }

        /// <summary>
        /// ID of the virtual machine
        /// </summary>
        /// <value>ID of the virtual machine</value>
        /// <example>8100</example>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Date and time when the virtual machine was created
        /// </summary>
        /// <value>Date and time when the virtual machine was created</value>
        /// <example>2021-11-26T14:54:11</example>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Name of the user who created the virtual machine
        /// </summary>
        /// <value>Name of the user who created the virtual machine</value>
        /// <example>Automation User</example>
        [DataMember(Name = "createdByName", EmitDefaultValue = false)]
        public string CreatedByName { get; set; }

        /// <summary>
        /// ID of the user who created the virtual machine
        /// </summary>
        /// <value>ID of the user who created the virtual machine</value>
        /// <example>123</example>
        [DataMember(Name = "createdById", EmitDefaultValue = false)]
        public int CreatedById { get; set; }

        /// <summary>
        /// Date and time when the virtual machine was last edited
        /// </summary>
        /// <value>Date and time when the virtual machine was last edited</value>
        /// <example>2021-11-26T14:54:11</example>
        [DataMember(Name = "modifiedAt", EmitDefaultValue = false)]
        public string ModifiedAt { get; set; }

        /// <summary>
        /// Name of the user who last edited the virtual machine
        /// </summary>
        /// <value>Name of the user who last edited the virtual machine</value>
        /// <example>Automation User</example>
        [DataMember(Name = "modifiedByName", EmitDefaultValue = false)]
        public string ModifiedByName { get; set; }

        /// <summary>
        /// ID of the user who last edited the virtual machine
        /// </summary>
        /// <value>ID of the user who last edited the virtual machine</value>
        /// <example>123</example>
        [DataMember(Name = "modifiedById", EmitDefaultValue = false)]
        public int ModifiedById { get; set; }

        /// <summary>
        /// Name of the virtual machine
        /// </summary>
        /// <value>Name of the virtual machine</value>
        /// <example>vm-default-e08149hp</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Project ID
        /// </summary>
        /// <value>Project ID</value>
        /// <example>933</example>
        [DataMember(Name = "projectId", EmitDefaultValue = false)]
        public int ProjectId { get; set; }

        /// <summary>
        /// Gets or Sets Provider
        /// </summary>
        [DataMember(Name = "provider", EmitDefaultValue = false)]
        public VmProvider Provider { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public VmLocation Location { get; set; }

        /// <summary>
        /// Gets or Sets DataCenter
        /// </summary>
        [DataMember(Name = "dataCenter", EmitDefaultValue = false)]
        public VmDataCenter DataCenter { get; set; }

        /// <summary>
        /// Gets or Sets Os
        /// </summary>
        [DataMember(Name = "os", EmitDefaultValue = false)]
        public VmOs Os { get; set; }

        /// <summary>
        /// Number of virtual Central Processing Units (vCPUs)
        /// </summary>
        /// <value>Number of virtual Central Processing Units (vCPUs)</value>
        /// <example>1</example>
        [DataMember(Name = "vCpu", EmitDefaultValue = false)]
        public int VCpu { get; set; }

        /// <summary>
        /// Capacity of the RAM in gigabytes
        /// </summary>
        /// <value>Capacity of the RAM in gigabytes</value>
        /// <example>2</example>
        [DataMember(Name = "ramGb", EmitDefaultValue = false)]
        public int RamGb { get; set; }

        /// <summary>
        /// List of volumes
        /// </summary>
        /// <value>List of volumes</value>
        [DataMember(Name = "disks", EmitDefaultValue = false)]
        public List<KubernetesNodeGroupsInnerNodesInnerDisksInner> Disks { get; set; }

        /// <summary>
        /// Gets or Sets Networks
        /// </summary>
        /// <example>[{&quot;id&quot;:9826,&quot;ip&quot;:&quot;10.106.0.2&quot;,&quot;networkTypeId&quot;:2,&quot;networkType&quot;:&quot;PRIVATE&quot;},{&quot;id&quot;:9825,&quot;ip&quot;:&quot;134.122.100.131&quot;,&quot;networkTypeId&quot;:1,&quot;networkType&quot;:&quot;PUBLIC&quot;}]</example>
        [DataMember(Name = "networks", EmitDefaultValue = false)]
        public List<KubernetesNodeGroupsInnerNodesInnerNetworksInner> Networks { get; set; }

        /// <summary>
        /// Gets or Sets SecurityGroup
        /// </summary>
        [DataMember(Name = "securityGroup", EmitDefaultValue = false)]
        public VmSecurityGroup SecurityGroup { get; set; }

        /// <summary>
        /// Gets or Sets Subnetwork
        /// </summary>
        [DataMember(Name = "subnetwork", EmitDefaultValue = false)]
        public VmSubnetwork Subnetwork { get; set; }

        /// <summary>
        /// SSH key ID
        /// </summary>
        /// <value>SSH key ID</value>
        /// <example>123</example>
        [DataMember(Name = "sshKeyId", EmitDefaultValue = false)]
        public int SshKeyId { get; set; }

        /// <summary>
        /// User name
        /// </summary>
        /// <value>User name</value>
        /// <example>root</example>
        [DataMember(Name = "userName", EmitDefaultValue = false)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets Cost
        /// </summary>
        [DataMember(Name = "cost", EmitDefaultValue = false)]
        public VmCost Cost { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = true)]
        public List<Tag> Tags { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Vm {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreatedByName: ").Append(CreatedByName).Append("\n");
            sb.Append("  CreatedById: ").Append(CreatedById).Append("\n");
            sb.Append("  ModifiedAt: ").Append(ModifiedAt).Append("\n");
            sb.Append("  ModifiedByName: ").Append(ModifiedByName).Append("\n");
            sb.Append("  ModifiedById: ").Append(ModifiedById).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Provider: ").Append(Provider).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  DataCenter: ").Append(DataCenter).Append("\n");
            sb.Append("  Os: ").Append(Os).Append("\n");
            sb.Append("  VCpu: ").Append(VCpu).Append("\n");
            sb.Append("  VCpuType: ").Append(VCpuType).Append("\n");
            sb.Append("  CloudNetworkType: ").Append(CloudNetworkType).Append("\n");
            sb.Append("  RamGb: ").Append(RamGb).Append("\n");
            sb.Append("  Disks: ").Append(Disks).Append("\n");
            sb.Append("  Networks: ").Append(Networks).Append("\n");
            sb.Append("  SecurityGroup: ").Append(SecurityGroup).Append("\n");
            sb.Append("  Subnetwork: ").Append(Subnetwork).Append("\n");
            sb.Append("  SshKeyId: ").Append(SshKeyId).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
