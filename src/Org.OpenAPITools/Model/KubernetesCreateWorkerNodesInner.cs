/*
 * Public EMMA API
 *
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// KubernetesCreateWorkerNodesInner
    /// </summary>
    [DataContract(Name = "KubernetesCreate_workerNodes_inner")]
    public partial class KubernetesCreateWorkerNodesInner : IValidatableObject
    {
        /// <summary>
        /// Type of the virtual Central Processing Unit (vCPU)
        /// </summary>
        /// <value>Type of the virtual Central Processing Unit (vCPU)</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VCpuTypeEnum
        {
            /// <summary>
            /// Enum Shared for value: shared
            /// </summary>
            [EnumMember(Value = "shared")]
            Shared = 1,

            /// <summary>
            /// Enum Standard for value: standard
            /// </summary>
            [EnumMember(Value = "standard")]
            Standard = 2,

            /// <summary>
            /// Enum Hpc for value: hpc
            /// </summary>
            [EnumMember(Value = "hpc")]
            Hpc = 3
        }


        /// <summary>
        /// Type of the virtual Central Processing Unit (vCPU)
        /// </summary>
        /// <value>Type of the virtual Central Processing Unit (vCPU)</value>
        /// <example>shared</example>
        [DataMember(Name = "vCpuType", IsRequired = true, EmitDefaultValue = true)]
        public VCpuTypeEnum VCpuType { get; set; }
        /// <summary>
        /// Volume type
        /// </summary>
        /// <value>Volume type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VolumeTypeEnum
        {
            /// <summary>
            /// Enum Ssd for value: ssd
            /// </summary>
            [EnumMember(Value = "ssd")]
            Ssd = 1,

            /// <summary>
            /// Enum SsdPlus for value: ssd-plus
            /// </summary>
            [EnumMember(Value = "ssd-plus")]
            SsdPlus = 2
        }


        /// <summary>
        /// Volume type
        /// </summary>
        /// <value>Volume type</value>
        /// <example>ssd</example>
        [DataMember(Name = "volumeType", IsRequired = true, EmitDefaultValue = true)]
        public VolumeTypeEnum VolumeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="KubernetesCreateWorkerNodesInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KubernetesCreateWorkerNodesInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KubernetesCreateWorkerNodesInner" /> class.
        /// </summary>
        /// <param name="name">Name of the worker node (required).</param>
        /// <param name="dataCenterId">ID of the data center (required).</param>
        /// <param name="vCpuType">Type of the virtual Central Processing Unit (vCPU) (required).</param>
        /// <param name="vCpu">Number of virtual Central Processing Units (vCPUs) (required).</param>
        /// <param name="ramGb">Capacity of the RAM in gigabytes (required).</param>
        /// <param name="volumeType">Volume type (required).</param>
        /// <param name="volumeGb">Capacity of the volume in gigabytes (required).</param>
        public KubernetesCreateWorkerNodesInner(string name = default(string), string dataCenterId = default(string), VCpuTypeEnum vCpuType = default(VCpuTypeEnum), int vCpu = default(int), int ramGb = default(int), VolumeTypeEnum volumeType = default(VolumeTypeEnum), int volumeGb = default(int))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for KubernetesCreateWorkerNodesInner and cannot be null");
            }
            this.Name = name;
            // to ensure "dataCenterId" is required (not null)
            if (dataCenterId == null)
            {
                throw new ArgumentNullException("dataCenterId is a required property for KubernetesCreateWorkerNodesInner and cannot be null");
            }
            this.DataCenterId = dataCenterId;
            this.VCpuType = vCpuType;
            this.VCpu = vCpu;
            this.RamGb = ramGb;
            this.VolumeType = volumeType;
            this.VolumeGb = volumeGb;
        }

        /// <summary>
        /// Name of the worker node
        /// </summary>
        /// <value>Name of the worker node</value>
        /// <example>default-name</example>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// ID of the data center
        /// </summary>
        /// <value>ID of the data center</value>
        /// <example>europe-west1-d</example>
        [DataMember(Name = "dataCenterId", IsRequired = true, EmitDefaultValue = true)]
        public string DataCenterId { get; set; }

        /// <summary>
        /// Number of virtual Central Processing Units (vCPUs)
        /// </summary>
        /// <value>Number of virtual Central Processing Units (vCPUs)</value>
        /// <example>2</example>
        [DataMember(Name = "vCpu", IsRequired = true, EmitDefaultValue = true)]
        public int VCpu { get; set; }

        /// <summary>
        /// Capacity of the RAM in gigabytes
        /// </summary>
        /// <value>Capacity of the RAM in gigabytes</value>
        /// <example>4</example>
        [DataMember(Name = "ramGb", IsRequired = true, EmitDefaultValue = true)]
        public int RamGb { get; set; }

        /// <summary>
        /// Capacity of the volume in gigabytes
        /// </summary>
        /// <value>Capacity of the volume in gigabytes</value>
        /// <example>16</example>
        [DataMember(Name = "volumeGb", IsRequired = true, EmitDefaultValue = true)]
        public int VolumeGb { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KubernetesCreateWorkerNodesInner {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  DataCenterId: ").Append(DataCenterId).Append("\n");
            sb.Append("  VCpuType: ").Append(VCpuType).Append("\n");
            sb.Append("  VCpu: ").Append(VCpu).Append("\n");
            sb.Append("  RamGb: ").Append(RamGb).Append("\n");
            sb.Append("  VolumeType: ").Append(VolumeType).Append("\n");
            sb.Append("  VolumeGb: ").Append(VolumeGb).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
