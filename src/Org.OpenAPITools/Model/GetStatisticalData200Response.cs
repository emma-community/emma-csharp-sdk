/*
 * Public EMMA API
 *
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using System.Reflection;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GetStatisticalData200Response
    /// </summary>
    [JsonConverter(typeof(GetStatisticalData200ResponseJsonConverter))]
    [DataContract(Name = "GetStatisticalData_200_response")]
    public partial class GetStatisticalData200Response : AbstractOpenAPISchema, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{VmMonitoringResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;VmMonitoringResponse&gt;.</param>
        public GetStatisticalData200Response(List<VmMonitoringResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{VmAnalyticsResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;VmAnalyticsResponse&gt;.</param>
        public GetStatisticalData200Response(List<VmAnalyticsResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{CostAnalysisResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;CostAnalysisResponse&gt;.</param>
        public GetStatisticalData200Response(List<CostAnalysisResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{ResourceAnalysisResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;ResourceAnalysisResponse&gt;.</param>
        public GetStatisticalData200Response(List<ResourceAnalysisResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{ProductStatisticsResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;ProductStatisticsResponse&gt;.</param>
        public GetStatisticalData200Response(List<ProductStatisticsResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{ProjectSummaryResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;ProjectSummaryResponse&gt;.</param>
        public GetStatisticalData200Response(List<ProjectSummaryResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{KubernetesClusterObjectsResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;KubernetesClusterObjectsResponse&gt;.</param>
        public GetStatisticalData200Response(List<KubernetesClusterObjectsResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{KubernetesClusterMetricsResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;KubernetesClusterMetricsResponse&gt;.</param>
        public GetStatisticalData200Response(List<KubernetesClusterMetricsResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{KubernetesClusterCurrentStateResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;KubernetesClusterCurrentStateResponse&gt;.</param>
        public GetStatisticalData200Response(List<KubernetesClusterCurrentStateResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{KubernetesClusterChangingMetricsResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;KubernetesClusterChangingMetricsResponse&gt;.</param>
        public GetStatisticalData200Response(List<KubernetesClusterChangingMetricsResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticalData200Response" /> class
        /// with the <see cref="List{KubernetesClusterObjectStatesResponse}" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of List&lt;KubernetesClusterObjectStatesResponse&gt;.</param>
        public GetStatisticalData200Response(List<KubernetesClusterObjectStatesResponse> actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }


        private Object _actualInstance;

        /// <summary>
        /// Gets or Sets ActualInstance
        /// </summary>
        public override Object ActualInstance
        {
            get
            {
                return _actualInstance;
            }
            set
            {
                if (value.GetType() == typeof(List<CostAnalysisResponse>) || value is List<CostAnalysisResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<KubernetesClusterChangingMetricsResponse>) || value is List<KubernetesClusterChangingMetricsResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<KubernetesClusterCurrentStateResponse>) || value is List<KubernetesClusterCurrentStateResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<KubernetesClusterMetricsResponse>) || value is List<KubernetesClusterMetricsResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<KubernetesClusterObjectStatesResponse>) || value is List<KubernetesClusterObjectStatesResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<KubernetesClusterObjectsResponse>) || value is List<KubernetesClusterObjectsResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<ProductStatisticsResponse>) || value is List<ProductStatisticsResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<ProjectSummaryResponse>) || value is List<ProjectSummaryResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<ResourceAnalysisResponse>) || value is List<ResourceAnalysisResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<VmAnalyticsResponse>) || value is List<VmAnalyticsResponse>)
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(List<VmMonitoringResponse>) || value is List<VmMonitoringResponse>)
                {
                    this._actualInstance = value;
                }
                else
                {
                    throw new ArgumentException("Invalid instance found. Must be the following types: List<CostAnalysisResponse>, List<KubernetesClusterChangingMetricsResponse>, List<KubernetesClusterCurrentStateResponse>, List<KubernetesClusterMetricsResponse>, List<KubernetesClusterObjectStatesResponse>, List<KubernetesClusterObjectsResponse>, List<ProductStatisticsResponse>, List<ProjectSummaryResponse>, List<ResourceAnalysisResponse>, List<VmAnalyticsResponse>, List<VmMonitoringResponse>");
                }
            }
        }

        /// <summary>
        /// Get the actual instance of `List&lt;VmMonitoringResponse&gt;`. If the actual instance is not `List&lt;VmMonitoringResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;VmMonitoringResponse&gt;</returns>
        public List<VmMonitoringResponse> GetList()
        {
            return (List<VmMonitoringResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;VmAnalyticsResponse&gt;`. If the actual instance is not `List&lt;VmAnalyticsResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;VmAnalyticsResponse&gt;</returns>
        public List<VmAnalyticsResponse> GetList()
        {
            return (List<VmAnalyticsResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;CostAnalysisResponse&gt;`. If the actual instance is not `List&lt;CostAnalysisResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;CostAnalysisResponse&gt;</returns>
        public List<CostAnalysisResponse> GetList()
        {
            return (List<CostAnalysisResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;ResourceAnalysisResponse&gt;`. If the actual instance is not `List&lt;ResourceAnalysisResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;ResourceAnalysisResponse&gt;</returns>
        public List<ResourceAnalysisResponse> GetList()
        {
            return (List<ResourceAnalysisResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;ProductStatisticsResponse&gt;`. If the actual instance is not `List&lt;ProductStatisticsResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;ProductStatisticsResponse&gt;</returns>
        public List<ProductStatisticsResponse> GetList()
        {
            return (List<ProductStatisticsResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;ProjectSummaryResponse&gt;`. If the actual instance is not `List&lt;ProjectSummaryResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;ProjectSummaryResponse&gt;</returns>
        public List<ProjectSummaryResponse> GetList()
        {
            return (List<ProjectSummaryResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;KubernetesClusterObjectsResponse&gt;`. If the actual instance is not `List&lt;KubernetesClusterObjectsResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;KubernetesClusterObjectsResponse&gt;</returns>
        public List<KubernetesClusterObjectsResponse> GetList()
        {
            return (List<KubernetesClusterObjectsResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;KubernetesClusterMetricsResponse&gt;`. If the actual instance is not `List&lt;KubernetesClusterMetricsResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;KubernetesClusterMetricsResponse&gt;</returns>
        public List<KubernetesClusterMetricsResponse> GetList()
        {
            return (List<KubernetesClusterMetricsResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;KubernetesClusterCurrentStateResponse&gt;`. If the actual instance is not `List&lt;KubernetesClusterCurrentStateResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;KubernetesClusterCurrentStateResponse&gt;</returns>
        public List<KubernetesClusterCurrentStateResponse> GetList()
        {
            return (List<KubernetesClusterCurrentStateResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;KubernetesClusterChangingMetricsResponse&gt;`. If the actual instance is not `List&lt;KubernetesClusterChangingMetricsResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;KubernetesClusterChangingMetricsResponse&gt;</returns>
        public List<KubernetesClusterChangingMetricsResponse> GetList()
        {
            return (List<KubernetesClusterChangingMetricsResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `List&lt;KubernetesClusterObjectStatesResponse&gt;`. If the actual instance is not `List&lt;KubernetesClusterObjectStatesResponse&gt;`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of List&lt;KubernetesClusterObjectStatesResponse&gt;</returns>
        public List<KubernetesClusterObjectStatesResponse> GetList()
        {
            return (List<KubernetesClusterObjectStatesResponse>)this.ActualInstance;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetStatisticalData200Response {\n");
            sb.Append("  ActualInstance: ").Append(this.ActualInstance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this.ActualInstance, GetStatisticalData200Response.SerializerSettings);
        }

        /// <summary>
        /// Converts the JSON string into an instance of GetStatisticalData200Response
        /// </summary>
        /// <param name="jsonString">JSON string</param>
        /// <returns>An instance of GetStatisticalData200Response</returns>
        public static GetStatisticalData200Response FromJson(string jsonString)
        {
            GetStatisticalData200Response newGetStatisticalData200Response = null;

            if (string.IsNullOrEmpty(jsonString))
            {
                return newGetStatisticalData200Response;
            }
            int match = 0;
            List<string> matchedTypes = new List<string>();

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<CostAnalysisResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<CostAnalysisResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<CostAnalysisResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<CostAnalysisResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<CostAnalysisResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<KubernetesClusterChangingMetricsResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterChangingMetricsResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterChangingMetricsResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<KubernetesClusterChangingMetricsResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<KubernetesClusterChangingMetricsResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<KubernetesClusterCurrentStateResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterCurrentStateResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterCurrentStateResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<KubernetesClusterCurrentStateResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<KubernetesClusterCurrentStateResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<KubernetesClusterMetricsResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterMetricsResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterMetricsResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<KubernetesClusterMetricsResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<KubernetesClusterMetricsResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<KubernetesClusterObjectStatesResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterObjectStatesResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterObjectStatesResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<KubernetesClusterObjectStatesResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<KubernetesClusterObjectStatesResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<KubernetesClusterObjectsResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterObjectsResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<KubernetesClusterObjectsResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<KubernetesClusterObjectsResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<KubernetesClusterObjectsResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<ProductStatisticsResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ProductStatisticsResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ProductStatisticsResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<ProductStatisticsResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<ProductStatisticsResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<ProjectSummaryResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ProjectSummaryResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ProjectSummaryResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<ProjectSummaryResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<ProjectSummaryResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<ResourceAnalysisResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ResourceAnalysisResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<ResourceAnalysisResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<ResourceAnalysisResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<ResourceAnalysisResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<VmAnalyticsResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<VmAnalyticsResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<VmAnalyticsResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<VmAnalyticsResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<VmAnalyticsResponse>: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(List<VmMonitoringResponse>).GetProperty("AdditionalProperties") == null)
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<VmMonitoringResponse>>(jsonString, GetStatisticalData200Response.SerializerSettings));
                }
                else
                {
                    newGetStatisticalData200Response = new GetStatisticalData200Response(JsonConvert.DeserializeObject<List<VmMonitoringResponse>>(jsonString, GetStatisticalData200Response.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("List<VmMonitoringResponse>");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into List<VmMonitoringResponse>: {1}", jsonString, exception.ToString()));
            }

            if (match == 0)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` cannot be deserialized into any schema defined.");
            }
            else if (match > 1)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` incorrectly matches more than one schema (should be exactly one match): " + String.Join(",", matchedTypes));
            }

            // deserialization is considered successful at this point if no exception has been thrown.
            return newGetStatisticalData200Response;
        }


        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// Custom JSON converter for GetStatisticalData200Response
    /// </summary>
    public class GetStatisticalData200ResponseJsonConverter : JsonConverter
    {
        /// <summary>
        /// To write the JSON string
        /// </summary>
        /// <param name="writer">JSON writer</param>
        /// <param name="value">Object to be converted into a JSON string</param>
        /// <param name="serializer">JSON Serializer</param>
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            writer.WriteRawValue((string)(typeof(GetStatisticalData200Response).GetMethod("ToJson").Invoke(value, null)));
        }

        /// <summary>
        /// To convert a JSON string into an object
        /// </summary>
        /// <param name="reader">JSON reader</param>
        /// <param name="objectType">Object type</param>
        /// <param name="existingValue">Existing value</param>
        /// <param name="serializer">JSON Serializer</param>
        /// <returns>The object converted from the JSON string</returns>
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            switch(reader.TokenType) 
            {
                case JsonToken.StartObject:
                    return GetStatisticalData200Response.FromJson(JObject.Load(reader).ToString(Formatting.None));
                case JsonToken.StartArray:
                    return GetStatisticalData200Response.FromJson(JArray.Load(reader).ToString(Formatting.None));
                default:
                    return null;
            }
        }

        /// <summary>
        /// Check if the object can be converted
        /// </summary>
        /// <param name="objectType">Object type</param>
        /// <returns>True if the object can be converted</returns>
        public override bool CanConvert(Type objectType)
        {
            return false;
        }
    }

}
