/*
 * Public EMMA API
 *
 * ### About Infrastructure API  **Base URL:** **<u>https://api.emma.ms/external</u>**   This **Infrastructure API** is for managing the emma cloud infrastructure within a project. The API enables you to view, create, edit, and delete _Virtual machines, Spot instances, Applications, Kubernetes clusters, SSH keys, Security groups, and Backup policies_. For creating the resources you can use the endpoints with the dictionaries: _Data centers, Locations, Providers, Operating systems, Virtual machines configurations, Spot instances configurations, Kubernetes clusters configurations._   ### Authentication   #### 1. Create service application   To access the API, enter your project, navigate to **Settings** > **Service Apps**, and create a service application. Select the access level **Read**, **Operate**, or **Manage**.   - **Read** - only GET methods are allowed in the API.   - **Operate** - some operations are allowed with the resources (e.g. _Start, Reboot,_ and _Shutdown_ of the Virtual machines).   - **Manage** - full creating, updating, and deleting of the resources is allowed.    #### 2. Get access token   - Copy the **Client ID** and **Client Secret** in the service application.  - Send an API request to the endpoint **_/issue-token** as specified in the **Authentication** section of the API documentation. You will receive access and refresh tokens in the response.   _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token \\  -H \"Content-Type: application/json\" \\  -d '{\"clientId\": \"YOUR-CLIENT-ID\", \"clientSecret\": \"YOUR-CLIENT-SECRET\"}'  ```  _For Windows:_  ```  curl -X POST https://api.emma.ms/external/v1/issue-token ^  -H \"Content-Type: application/json\" ^  -d \"{\\\"clientId\\\": \\\"YOUR-CLIENT-ID\\\", \\\"clientSecret\\\": \\\"YOUR-CLIENT-SECRET\\\"}\"  ```   #### 3. Use access token in requests  The Bearer access token is a text string, included in the request header, for example:   _For Linux / Mac:_  ```  curl -X GET https://api.emma.ms/external/v1/locations -H \"Authorization: Bearer YOUR-ACCESS-TOKEN-HERE\"  ```   Use this token for the API requests.    #### 4. Refresh token  The access token will expire in 10 minutes. A new access token may be created using the refresh token (without Client ID and Client Secret).   To get a new access token send a request to the **_/refresh-token** endpoint:    _For Linux / Mac:_  ```  curl -X POST https://api.emma.ms/external/v1/refresh-token \\  -H \"Content-Type: application/json\" \\  -d '{\"refreshToken\": \"YOUR-REFRESH-TOKEN\"}'  ```       ### Possible response status codes   We use standard HTTP response codes to show the success or failure of requests.   `2xx` - successful responses.   `4xx` - client error responses (the response contains an explanation of the error).   `5xx` - server error responses.   The API uses the following status codes:   | Status Code | Description                  | Notes                                                                  |  |- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | 200         | OK                           | The request was successful.                                             |  | 201         | Created                      | The object was successfully created. This code is only used with objects that are created immediately.  | 204         | No content                   | A successful request, but there is no additional information to send back in the response body (in a case when the object was deleted).    | 400         | Bad Request                  | The request could not be understood by the server. Incoming parameters might not be valid. |  | 401         | Unauthorized            | The client is unauthenticated. The client must authenticate itself to get the requested response. |  | 403         | Forbidden                   | The client does not have access rights to the content.  | 404         | Not Found                    | The requested resource is not found.                                    |  | 409         | Conflict | This response is sent when a request conflicts with the current state of the object (e.g. deleting the security group with the compute instances in it).|  | 422         | Unprocessable Content   | The request was well-formed but was unable to be followed due to incorrect field values (e.g. creation of a virtual machine in the non-existent data center).  |  | 500         | Internal server Error                 | The server could not return the representation due to an internal server error. | 
 *
 * The version of the OpenAPI document: 1.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ProductStatisticsResponse
    /// </summary>
    [DataContract(Name = "ProductStatisticsResponse")]
    public partial class ProductStatisticsResponse : IValidatableObject
    {
        /// <summary>
        /// Internal service parameter
        /// </summary>
        /// <value>Internal service parameter</value>
        public enum EmptyValueEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1
        }


        /// <summary>
        /// Internal service parameter
        /// </summary>
        /// <value>Internal service parameter</value>
        /// <example>1</example>
        [DataMember(Name = "emptyValue", EmitDefaultValue = false)]
        public EmptyValueEnum? EmptyValue { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductStatisticsResponse" /> class.
        /// </summary>
        /// <param name="service">emma&#39;s internal service type.</param>
        /// <param name="vmId">ID of VM.</param>
        /// <param name="vmName">VM name.</param>
        /// <param name="headProductId">ID of a head product.</param>
        /// <param name="headProductName">Head product name.</param>
        /// <param name="currency">User currency.</param>
        /// <param name="cost">Product monthly cost.</param>
        /// <param name="providerName">Provider name.</param>
        /// <param name="country">Location country.</param>
        /// <param name="location">Location name.</param>
        /// <param name="latitude">Location latitude.</param>
        /// <param name="longitude">Location longitude.</param>
        /// <param name="statusNormalized">Product UI status.</param>
        /// <param name="cpuTotal">Total CPU, vCPUs.</param>
        /// <param name="ramTotal">Total memory, MB.</param>
        /// <param name="diskUsageTotal">Total disk size, GB.</param>
        /// <param name="cpuUsage">Average CPU utilization for the last hour.</param>
        /// <param name="ramUsage">Average memory utilization for the last hour.</param>
        /// <param name="diskUsage">Average disk utilization for the last hour.</param>
        /// <param name="emptyValue">Internal service parameter.</param>
        public ProductStatisticsResponse(string service = default(string), int vmId = default(int), string vmName = default(string), int headProductId = default(int), string headProductName = default(string), string currency = default(string), decimal cost = default(decimal), string providerName = default(string), string country = default(string), string location = default(string), decimal latitude = default(decimal), decimal longitude = default(decimal), string statusNormalized = default(string), decimal cpuTotal = default(decimal), decimal ramTotal = default(decimal), decimal diskUsageTotal = default(decimal), decimal cpuUsage = default(decimal), decimal ramUsage = default(decimal), decimal diskUsage = default(decimal), EmptyValueEnum? emptyValue = default(EmptyValueEnum?))
        {
            this.Service = service;
            this.VmId = vmId;
            this.VmName = vmName;
            this.HeadProductId = headProductId;
            this.HeadProductName = headProductName;
            this.Currency = currency;
            this.Cost = cost;
            this.ProviderName = providerName;
            this.Country = country;
            this.Location = location;
            this.Latitude = latitude;
            this.Longitude = longitude;
            this.StatusNormalized = statusNormalized;
            this.CpuTotal = cpuTotal;
            this.RamTotal = ramTotal;
            this.DiskUsageTotal = diskUsageTotal;
            this.CpuUsage = cpuUsage;
            this.RamUsage = ramUsage;
            this.DiskUsage = diskUsage;
            this.EmptyValue = emptyValue;
        }

        /// <summary>
        /// emma&#39;s internal service type
        /// </summary>
        /// <value>emma&#39;s internal service type</value>
        /// <example>cr</example>
        [DataMember(Name = "service", EmitDefaultValue = false)]
        public string Service { get; set; }

        /// <summary>
        /// ID of VM
        /// </summary>
        /// <value>ID of VM</value>
        /// <example>1111</example>
        [DataMember(Name = "vmId", EmitDefaultValue = false)]
        public int VmId { get; set; }

        /// <summary>
        /// VM name
        /// </summary>
        /// <value>VM name</value>
        /// <example>lamp-machine</example>
        [DataMember(Name = "vmName", EmitDefaultValue = false)]
        public string VmName { get; set; }

        /// <summary>
        /// ID of a head product
        /// </summary>
        /// <value>ID of a head product</value>
        /// <example>1111</example>
        [DataMember(Name = "headProductId", EmitDefaultValue = false)]
        public int HeadProductId { get; set; }

        /// <summary>
        /// Head product name
        /// </summary>
        /// <value>Head product name</value>
        /// <example>lamp-single-node</example>
        [DataMember(Name = "headProductName", EmitDefaultValue = false)]
        public string HeadProductName { get; set; }

        /// <summary>
        /// User currency
        /// </summary>
        /// <value>User currency</value>
        /// <example>EUR</example>
        [DataMember(Name = "currency", EmitDefaultValue = false)]
        public string Currency { get; set; }

        /// <summary>
        /// Product monthly cost
        /// </summary>
        /// <value>Product monthly cost</value>
        /// <example>111.11</example>
        [DataMember(Name = "cost", EmitDefaultValue = false)]
        public decimal Cost { get; set; }

        /// <summary>
        /// Provider name
        /// </summary>
        /// <value>Provider name</value>
        /// <example>Digital Ocean</example>
        [DataMember(Name = "providerName", EmitDefaultValue = false)]
        public string ProviderName { get; set; }

        /// <summary>
        /// Location country
        /// </summary>
        /// <value>Location country</value>
        /// <example>Australia</example>
        [DataMember(Name = "country", EmitDefaultValue = false)]
        public string Country { get; set; }

        /// <summary>
        /// Location name
        /// </summary>
        /// <value>Location name</value>
        /// <example>Sydney</example>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public string Location { get; set; }

        /// <summary>
        /// Location latitude
        /// </summary>
        /// <value>Location latitude</value>
        /// <example>-33.867485</example>
        [DataMember(Name = "latitude", EmitDefaultValue = false)]
        public decimal Latitude { get; set; }

        /// <summary>
        /// Location longitude
        /// </summary>
        /// <value>Location longitude</value>
        /// <example>151.20699</example>
        [DataMember(Name = "longitude", EmitDefaultValue = false)]
        public decimal Longitude { get; set; }

        /// <summary>
        /// Product UI status
        /// </summary>
        /// <value>Product UI status</value>
        /// <example>true</example>
        [DataMember(Name = "statusNormalized", EmitDefaultValue = false)]
        public string StatusNormalized { get; set; }

        /// <summary>
        /// Total CPU, vCPUs
        /// </summary>
        /// <value>Total CPU, vCPUs</value>
        /// <example>2</example>
        [DataMember(Name = "cpuTotal", EmitDefaultValue = false)]
        public decimal CpuTotal { get; set; }

        /// <summary>
        /// Total memory, MB
        /// </summary>
        /// <value>Total memory, MB</value>
        /// <example>2</example>
        [DataMember(Name = "ramTotal", EmitDefaultValue = false)]
        public decimal RamTotal { get; set; }

        /// <summary>
        /// Total disk size, GB
        /// </summary>
        /// <value>Total disk size, GB</value>
        /// <example>16</example>
        [DataMember(Name = "diskUsageTotal", EmitDefaultValue = false)]
        public decimal DiskUsageTotal { get; set; }

        /// <summary>
        /// Average CPU utilization for the last hour
        /// </summary>
        /// <value>Average CPU utilization for the last hour</value>
        /// <example>-1</example>
        [DataMember(Name = "cpuUsage", EmitDefaultValue = false)]
        public decimal CpuUsage { get; set; }

        /// <summary>
        /// Average memory utilization for the last hour
        /// </summary>
        /// <value>Average memory utilization for the last hour</value>
        /// <example>100</example>
        [DataMember(Name = "ramUsage", EmitDefaultValue = false)]
        public decimal RamUsage { get; set; }

        /// <summary>
        /// Average disk utilization for the last hour
        /// </summary>
        /// <value>Average disk utilization for the last hour</value>
        /// <example>-1</example>
        [DataMember(Name = "diskUsage", EmitDefaultValue = false)]
        public decimal DiskUsage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductStatisticsResponse {\n");
            sb.Append("  Service: ").Append(Service).Append("\n");
            sb.Append("  VmId: ").Append(VmId).Append("\n");
            sb.Append("  VmName: ").Append(VmName).Append("\n");
            sb.Append("  HeadProductId: ").Append(HeadProductId).Append("\n");
            sb.Append("  HeadProductName: ").Append(HeadProductName).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  ProviderName: ").Append(ProviderName).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Latitude: ").Append(Latitude).Append("\n");
            sb.Append("  Longitude: ").Append(Longitude).Append("\n");
            sb.Append("  StatusNormalized: ").Append(StatusNormalized).Append("\n");
            sb.Append("  CpuTotal: ").Append(CpuTotal).Append("\n");
            sb.Append("  RamTotal: ").Append(RamTotal).Append("\n");
            sb.Append("  DiskUsageTotal: ").Append(DiskUsageTotal).Append("\n");
            sb.Append("  CpuUsage: ").Append(CpuUsage).Append("\n");
            sb.Append("  RamUsage: ").Append(RamUsage).Append("\n");
            sb.Append("  DiskUsage: ").Append(DiskUsage).Append("\n");
            sb.Append("  EmptyValue: ").Append(EmptyValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
